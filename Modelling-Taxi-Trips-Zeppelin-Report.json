{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523046615886_-170301531","id":"20180406-133015_1438690605","dateCreated":"2018-04-06T13:30:15-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8675","text":"%md\n# Predictive Modelling of taxi trips in New York City\n\nWe use the GPS data obtained from various cabs in New York city during different times of the day. We use K-Means algorithm to cluster the taxi trips on the basis of the locations. This helps us identify the groups of areas which see most taxi traffic, or different times of the day we can expect a particular region to have more taxi trips and so on.\n\nTechnology stack:\n\n- Apache Spark (ML and SQL)\n- HDFS\n- Scala\n- Apache Zeppelin Notebook\n\n\nData Source: [NYC Uber Taxi data 2016](https://data.cityofnewyork.us/Transportation/Uber-Trips-NYC-2016/gt3n-7ri6/data)","dateUpdated":"2018-04-06T13:42:43-0700","dateFinished":"2018-04-06T13:42:43-0700","dateStarted":"2018-04-06T13:42:43-0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Predictive Modelling of taxi trips in New York City</h1>\n<p>We use the GPS data obtained from various cabs in New York city during different times of the day. We use K-Means algorithm to cluster the taxi trips on the basis of the locations. This helps us identify the groups of areas which see most taxi traffic, or different times of the day we can expect a particular region to have more taxi trips and so on.</p>\n<p>Technology stack:</p>\n<ul>\n  <li>Apache Spark (ML and SQL)</li>\n  <li>HDFS</li>\n  <li>Scala</li>\n  <li>Apache Zeppelin Notebook</li>\n</ul>\n<p>Data Source: <a href=\"https://data.cityofnewyork.us/Transportation/Uber-Trips-NYC-2016/gt3n-7ri6/data\">NYC Uber Taxi data 2016</a></p>\n</div>"}]}},{"text":"//Import all the necessary classes and packages for feature transformation, Machine learning and SQL queries\n%spark\nimport org.apache.hadoop.fs \nimport org.apache.spark._\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.Dataset\nimport org.apache.spark.sql.types.TimestampType\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.clustering.KMeans","user":"anonymous","dateUpdated":"2018-04-06T13:27:53-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.hadoop.fs\nimport org.apache.spark._\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.Dataset\nimport org.apache.spark.sql.types.TimestampType\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.clustering.KMeans\n"}]},"apps":[],"jobName":"paragraph_1523028243822_989790774","id":"20180406-082403_304706944","dateCreated":"2018-04-06T08:24:03-0700","dateStarted":"2018-04-06T09:14:47-0700","dateFinished":"2018-04-06T09:14:51-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4449"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523046505673_260816451","id":"20180406-132825_933940723","dateCreated":"2018-04-06T13:28:25-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:8585","text":"%md\n## Data preprocessing\n\nWe import the data with taxi trips in New York City from HDFS and do som preliminary data exploration","dateUpdated":"2018-04-06T13:30:02-0700","dateFinished":"2018-04-06T13:30:03-0700","dateStarted":"2018-04-06T13:30:02-0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Data preprocessing</h2>\n<p>We import the data with taxi trips in New York City from HDFS and do som preliminary data exploration</p>\n</div>"}]}},{"text":"%spark\n\n//Create case class to specify schema for the dataset\ncase class Taxi(date: String, latitude: Double, longitude: Double, base: String) extends Serializable\n\n//Create spark session\nval spark: SparkSession = SparkSession.builder().appName(\"Taxi\").getOrCreate()\n\n//Importing package for converting Scala objects into SQL DataFrames\nimport spark.implicits._\n\n//Construct schema for taxi dataset\nval taxi_schema = StructType(Array(\n      StructField(\"date\", TimestampType, true),\n      StructField(\"latitude\", DoubleType, true),\n      StructField(\"longitude\", DoubleType, true),\n      StructField(\"base\", StringType, true)\n    ))\n//import Taxi dataset from a CSV file on HDFS\nval dfTaxi: Dataset[Taxi] = spark.read.option(\"inferSchema\", \"false\")\n                                        .schema(taxi_schema).csv(\"hdfs://quickstart.cloudera:8020/DataAnalytics/Taxi/uber.csv\").as[Taxi]\n                                        \ndfTaxi.cache\ndfTaxi.show\n/*\nval taxi_data = spark.read.\n                  option(\"delimiter\",\",\").\n                  option(\"header\",\"false\").\n                  csv(\"hdfs://quickstart.cloudera:8020/DataAnalytics/Taxi/uber.csv\")*/\n","user":"anonymous","dateUpdated":"2018-04-06T12:11:47-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class Taxi\nspark: org.apache.spark.sql.SparkSession = org.apache.spark.sql.SparkSession@76cc0a2c\nimport spark.implicits._\ntaxi_schema: org.apache.spark.sql.types.StructType = StructType(StructField(date,TimestampType,true), StructField(latitude,DoubleType,true), StructField(longitude,DoubleType,true), StructField(base,StringType,true))\ndfTaxi: org.apache.spark.sql.Dataset[Taxi] = [date: timestamp, latitude: double ... 2 more fields]\nres28: dfTaxi.type = [date: timestamp, latitude: double ... 2 more fields]\n+-------------------+--------+---------+------+\n|               date|latitude|longitude|  base|\n+-------------------+--------+---------+------+\n|2014-08-01 00:00:00|  40.729| -73.9422|B02598|\n|2014-08-01 00:00:00| 40.7476| -73.9871|B02598|\n|2014-08-01 00:00:00| 40.7424| -74.0044|B02598|\n|2014-08-01 00:00:00|  40.751| -73.9869|B02598|\n|2014-08-01 00:00:00| 40.7406| -73.9902|B02598|\n|2014-08-01 00:00:00| 40.6994| -73.9591|B02617|\n|2014-08-01 00:00:00| 40.6917| -73.9398|B02617|\n|2014-08-01 00:00:00| 40.7063| -73.9223|B02617|\n|2014-08-01 00:00:00| 40.6759| -74.0168|B02617|\n|2014-08-01 00:00:00| 40.7617| -73.9847|B02617|\n|2014-08-01 00:00:00| 40.6969| -73.9064|B02617|\n|2014-08-01 00:00:00| 40.7623| -73.9751|B02617|\n|2014-08-01 00:00:00| 40.6982| -73.9669|B02617|\n|2014-08-01 00:00:00| 40.7553| -73.9253|B02617|\n|2014-08-01 00:00:00| 40.7325| -73.9876|B02682|\n|2014-08-01 00:00:00| 40.6754|  -74.017|B02682|\n|2014-08-01 00:00:00| 40.7303| -74.0029|B02682|\n|2014-08-01 00:00:00| 40.7218| -73.9973|B02682|\n|2014-08-01 00:00:00| 40.7134| -74.0091|B02682|\n|2014-08-01 00:00:00| 40.7194| -73.9964|B02682|\n+-------------------+--------+---------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1523028312665_119412141","id":"20180406-082512_1463967359","dateCreated":"2018-04-06T08:25:12-0700","dateStarted":"2018-04-06T12:11:47-0700","dateFinished":"2018-04-06T12:12:38-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4450","focus":true},{"text":"%md\n## Feature Transformation","user":"anonymous","dateUpdated":"2018-04-06T12:26:42-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523030625358_359786614","id":"20180406-090345_472619861","dateCreated":"2018-04-06T09:03:45-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4451","dateFinished":"2018-04-06T12:26:42-0700","dateStarted":"2018-04-06T12:26:42-0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Feature Transformation</h2>\n</div>"}]}},{"text":"%spark\n//Since, we intend to build machine learning models, we need to transform columns to feature vectors\nval input_features = Array(\"latitude\", \"longitude\")\n\n//Use vector assembler to combine multiple columns to one\nval assembler = new VectorAssembler().setInputCols(input_features).setOutputCol(\"location_features\")\nval dfTaxi_transformed = assembler.transform(dfTaxi)\n\n//Randomly split data in to training and testing set in ratio 80:20\nval Array(taxiTrain, taxiTest) = dfTaxi_transformed.randomSplit(Array(0.8, 0.2), 999)\n","user":"anonymous","dateUpdated":"2018-04-06T12:29:36-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523042207825_-871980592","id":"20180406-121647_782116010","dateCreated":"2018-04-06T12:16:47-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5739","dateFinished":"2018-04-06T12:29:46-0700","dateStarted":"2018-04-06T12:29:36-0700","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"input_features: Array[String] = Array(latitude, longitude)\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_44c6ad8a1abd\ndfTaxi_transformed: org.apache.spark.sql.DataFrame = [date: timestamp, latitude: double ... 3 more fields]\ntaxiTrain: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [date: timestamp, latitude: double ... 3 more fields]\ntaxiTest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [date: timestamp, latitude: double ... 3 more fields]\n"}]}},{"text":"%md\n## Train the model\n","user":"anonymous","dateUpdated":"2018-04-06T12:27:46-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523042846930_365843631","id":"20180406-122726_1008896246","dateCreated":"2018-04-06T12:27:26-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5928","dateFinished":"2018-04-06T12:27:46-0700","dateStarted":"2018-04-06T12:27:46-0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Train the model</h2>\n</div>"}]}},{"text":"%spark\nval kmeans = new KMeans().setK(18).setFeaturesCol(\"location_features\").setMaxIter(5)\nval model = kmeans.fit(taxiTrain)\nprintln(\"Cluster Centroids: \")\nmodel.clusterCenters.foreach(println)\n","user":"anonymous","dateUpdated":"2018-04-06T12:30:29-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523042866789_-1516332664","id":"20180406-122746_782967411","dateCreated":"2018-04-06T12:27:46-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:5985","dateFinished":"2018-04-06T12:31:23-0700","dateStarted":"2018-04-06T12:30:30-0700","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"kmeans: org.apache.spark.ml.clustering.KMeans = kmeans_4270d400da69\nmodel: org.apache.spark.ml.clustering.KMeansModel = kmeans_4270d400da69\nCluster Centroids: \n[40.708707702574614,-73.94519330522148]\n[40.79972341269834,-73.09962738095238]\n[40.646255458490685,-73.78277690295982]\n[40.91996230859834,-74.11293627797413]\n[40.62496544854269,-73.97724601548273]\n[40.72342669410549,-74.00057888262955]\n[40.99662199582031,-73.77625428422144]\n[40.74241354523233,-73.6629822493887]\n[40.76882104817855,-73.88024251046359]\n[40.75945410034488,-73.97385021081861]\n[40.69604214133483,-74.20155060919991]\n[40.68117521932364,-73.98062265076337]\n[40.74818388708658,-73.99197363676282]\n[40.72952330096997,-73.83393584142384]\n[40.84751038030945,-73.92105547415188]\n[40.77217399999998,-73.47018655555556]\n[40.78339974696851,-73.9594473695645]\n[40.20810788804068,-74.05395267175572]\n"}]}},{"text":"%md\n## Predictions\n","user":"anonymous","dateUpdated":"2018-04-06T12:33:04-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523042957976_1521414789","id":"20180406-122917_1558686979","dateCreated":"2018-04-06T12:29:17-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6058","dateFinished":"2018-04-06T12:33:04-0700","dateStarted":"2018-04-06T12:33:04-0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Predictions</h2>\n</div>"}]}},{"text":"%spark\nval predicted_categories = model.transform(taxiTest)\n\n//Create a temporary table for querying and analysing predicted clusters\npredicted_categories.createOrReplaceTempView(\"taxiTable\")\n\npredicted_categories.show","user":"anonymous","dateUpdated":"2018-04-06T12:42:08-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523043183912_-2040672606","id":"20180406-123303_370339766","dateCreated":"2018-04-06T12:33:03-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6195","dateFinished":"2018-04-06T12:42:19-0700","dateStarted":"2018-04-06T12:42:08-0700","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"predicted_categories: org.apache.spark.sql.DataFrame = [date: timestamp, latitude: double ... 4 more fields]\n+-------------------+--------+---------+------+------------------+----------+\n|               date|latitude|longitude|  base| location_features|prediction|\n+-------------------+--------+---------+------+------------------+----------+\n|2014-08-01 00:00:00| 40.3495| -74.0667|B02682|[40.3495,-74.0667]|        17|\n|2014-08-01 00:00:00| 40.6994| -73.9591|B02617|[40.6994,-73.9591]|         0|\n|2014-08-01 00:00:00| 40.7218| -73.9973|B02682|[40.7218,-73.9973]|         5|\n|2014-08-01 00:00:00| 40.7553| -73.9253|B02617|[40.7553,-73.9253]|        16|\n|2014-08-01 00:00:00| 40.7617| -73.9847|B02617|[40.7617,-73.9847]|         9|\n|2014-08-01 00:00:00|  40.762|  -73.983|B02682|  [40.762,-73.983]|         9|\n|2014-08-01 00:01:00| 40.6718| -73.9522|B02682|[40.6718,-73.9522]|        11|\n|2014-08-01 00:01:00| 40.6906| -73.9933|B02598|[40.6906,-73.9933]|        11|\n|2014-08-01 00:01:00| 40.7403| -74.0081|B02598|[40.7403,-74.0081]|        12|\n|2014-08-01 00:01:00| 40.7468| -74.0024|B02617|[40.7468,-74.0024]|        12|\n|2014-08-01 00:01:00| 40.7752| -73.9634|B02682|[40.7752,-73.9634]|        16|\n|2014-08-01 00:03:00| 40.7366| -73.9906|B02512|[40.7366,-73.9906]|        12|\n|2014-08-01 00:04:00| 40.7213| -73.9946|B02598|[40.7213,-73.9946]|         5|\n|2014-08-01 00:04:00| 40.7271| -73.9915|B02617|[40.7271,-73.9915]|         5|\n|2014-08-01 00:05:00| 40.6834| -73.9966|B02682|[40.6834,-73.9966]|        11|\n|2014-08-01 00:05:00| 40.7524| -73.9933|B02617|[40.7524,-73.9933]|        12|\n|2014-08-01 00:06:00| 40.6457| -73.7767|B02617|[40.6457,-73.7767]|         2|\n|2014-08-01 00:06:00| 40.7069| -73.9505|B02598|[40.7069,-73.9505]|         0|\n|2014-08-01 00:06:00| 40.7226| -74.0034|B02598|[40.7226,-74.0034]|         5|\n|2014-08-01 00:06:00| 40.7309| -74.0014|B02682|[40.7309,-74.0014]|         5|\n+-------------------+--------+---------+------+------------------+----------+\nonly showing top 20 rows\n\n"}]}},{"text":"%md\n## Analysis of results\n\n#### 1. Number of trips in each cluster\nRegions of New York which fall under clusters 5, 9 and 12 seem to have lot of taxi trips","user":"anonymous","dateUpdated":"2018-04-06T12:51:02-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523043450263_1824497875","id":"20180406-123730_83676976","dateCreated":"2018-04-06T12:37:30-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6277","dateFinished":"2018-04-06T12:51:02-0700","dateStarted":"2018-04-06T12:51:02-0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Analysis of results</h2>\n<h4>1. Number of trips in each cluster</h4>\n<p>Regions of New York which fall under clusters 5, 9 and 12 seem to have lot of taxi trips</p>\n</div>"}]}},{"text":"%spark\nz.show(predicted_categories.groupBy(\"prediction\").count())\n","user":"anonymous","dateUpdated":"2018-04-06T13:14:12-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"pieChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523043935331_-861914179","id":"20180406-124535_1938703330","dateCreated":"2018-04-06T12:45:35-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6383","dateFinished":"2018-04-06T12:48:44-0700","dateStarted":"2018-04-06T12:48:33-0700","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"prediction\tcount\n12\t35757\n1\t57\n13\t2076\n16\t15835\n6\t464\n3\t236\n5\t40186\n15\t242\n17\t102\n9\t30373\n4\t2215\n8\t5630\n7\t519\n10\t1597\n11\t10912\n14\t3003\n2\t4485\n0\t12873\n"}]}},{"text":"%md\n#### Which are the busiest hours in different parts of the city?\nWe can see taxis are quite popular in almost all parts of NYC and during entire day. However, as expected, we can see a dip in taxi demand at late nights and early mornings","user":"anonymous","dateUpdated":"2018-04-06T13:10:31-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523044112878_-1223577622","id":"20180406-124832_826437884","dateCreated":"2018-04-06T12:48:32-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6493","dateFinished":"2018-04-06T13:10:31-0700","dateStarted":"2018-04-06T13:10:31-0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Which are the busiest hours in different parts of the city?</h4>\n<p>We can see taxis are quite popular in almost all parts of NYC and during entire day. However, as expected, we can see a dip in taxi demand at late nights and early mornings</p>\n</div>"}]}},{"text":"%spark\nz.show(predicted_categories.select(hour($\"date\").alias(\"hour\"), $\"prediction\").groupBy(\"hour\", \"prediction\").agg(count(\"prediction\")\n      .alias(\"count\")).orderBy(desc(\"count\")))\n","user":"anonymous","dateUpdated":"2018-04-06T12:56:09-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"lineChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523044422949_1245231832","id":"20180406-125342_700286121","dateCreated":"2018-04-06T12:53:42-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:6934","dateFinished":"2018-04-06T12:55:09-0700","dateStarted":"2018-04-06T12:54:55-0700","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"hour\tprediction\tcount\n17\t12\t2850\n17\t5\t2725\n21\t5\t2695\n20\t5\t2666\n18\t5\t2653\n19\t5\t2648\n16\t12\t2630\n22\t5\t2596\n16\t5\t2554\n17\t9\t2483\n16\t9\t2481\n18\t12\t2467\n18\t9\t2333\n19\t12\t2262\n20\t12\t2240\n21\t12\t2222\n19\t9\t2221\n15\t5\t2204\n15\t12\t2159\n15\t9\t2118\n20\t9\t2040\n22\t12\t2008\n23\t5\t1916\n14\t12\t1864\n14\t5\t1768\n21\t9\t1681\n13\t5\t1648\n8\t5\t1562\n14\t9\t1549\n7\t5\t1526\n13\t12\t1517\n10\t5\t1417\n13\t9\t1410\n8\t12\t1401\n12\t5\t1386\n23\t12\t1367\n11\t5\t1354\n12\t12\t1330\n22\t9\t1310\n0\t5\t1275\n7\t12\t1272\n10\t12\t1267\n11\t9\t1267\n11\t12\t1262\n9\t5\t1257\n12\t9\t1257\n8\t9\t1218\n10\t9\t1202\n9\t12\t1177\n7\t16\t1138\n7\t9\t1103\n6\t5\t1102\n9\t9\t1090\n8\t16\t1065\n0\t12\t1003\n18\t16\t971\n17\t16\t948\n16\t16\t916\n1\t5\t886\n6\t12\t879\n23\t9\t877\n19\t16\t865\n9\t16\t855\n15\t16\t824\n21\t11\t778\n20\t16\t770\n6\t16\t768\n21\t0\t764\n19\t0\t758\n10\t16\t750\n18\t0\t740\n11\t16\t740\n20\t0\t734\n1\t12\t731\n22\t0\t730\n6\t9\t721\n17\t0\t710\n23\t0\t708\n5\t5\t703\n17\t11\t697\n14\t16\t695\n20\t11\t693\n13\t16\t691\n21\t16\t681\n12\t16\t663\n22\t16\t655\n19\t11\t647\n18\t11\t630\n22\t11\t621\n2\t5\t611\n16\t11\t611\n16\t0\t553\n0\t0\t540\n15\t0\t536\n3\t5\t533\n9\t0\t530\n15\t11\t527\n14\t0\t522\n14\t11\t521\n0\t9\t509\n10\t0\t508\n8\t0\t505\n7\t0\t502\n4\t5\t501\n23\t11\t498\n2\t12\t497\n7\t11\t490\n5\t12\t489\n13\t0\t484\n12\t0\t474\n13\t11\t472\n11\t0\t468\n8\t11\t465\n6\t0\t460\n3\t12\t458\n11\t11\t450\n5\t16\t448\n5\t9\t435\n20\t8\t422\n19\t8\t408\n4\t12\t405\n9\t11\t404\n1\t0\t402\n10\t11\t399\n12\t11\t386\n18\t8\t385\n6\t11\t384\n23\t16\t382\n21\t8\t374\n5\t0\t360\n15\t8\t352\n19\t2\t341\n17\t8\t340\n2\t0\t337\n16\t8\t337\n20\t2\t334\n21\t2\t333\n14\t2\t326\n22\t2\t322\n22\t8\t320\n1\t9\t313\n15\t2\t310\n0\t11\t305\n13\t8\t296\n5\t11\t295\n9\t8\t294\n4\t16\t290\n4\t9\t287\n23\t2\t283\n8\t8\t281\n10\t8\t278\n3\t0\t276\n4\t0\t272\n11\t8\t272\n3\t9\t266\n0\t16\t264\n16\t2\t254\n18\t2\t249\n6\t2\t247\n14\t8\t237\n12\t8\t222\n5\t2\t218\n21\t14\t213\n17\t2\t212\n2\t9\t202\n3\t16\t199\n1\t11\t189\n21\t13\t183\n15\t14\t183\n13\t2\t182\n3\t11\t178\n20\t14\t169\n7\t8\t168\n12\t14\t161\n20\t13\t160\n22\t13\t159\n13\t14\t158\n4\t11\t156\n14\t14\t154\n17\t14\t153\n6\t8\t152\n16\t14\t145\n1\t16\t145\n22\t14\t144\n19\t14\t144\n18\t14\t142\n17\t4\t141\n11\t14\t139\n20\t4\t136\n19\t4\t135\n12\t2\t134\n7\t2\t132\n4\t2\t132\n23\t8\t129\n15\t10\t126\n7\t14\t126\n16\t4\t125\n17\t13\t125\n9\t14\t125\n10\t14\t124\n11\t4\t122\n15\t4\t121\n18\t4\t118\n2\t11\t116\n16\t10\t113\n2\t16\t112\n15\t13\t111\n18\t13\t111\n6\t14\t107\n14\t4\t107\n16\t13\t107\n19\t13\t106\n23\t14\t106\n21\t10\t105\n8\t4\t105\n21\t4\t103\n10\t2\t103\n8\t14\t101\n11\t2\t100\n14\t13\t100\n9\t4\t99\n23\t13\t98\n22\t4\t97\n13\t4\t96\n10\t13\t94\n19\t10\t94\n17\t10\t93\n13\t10\t93\n13\t13\t93\n5\t14\t92\n5\t8\t90\n7\t13\t90\n22\t10\t89\n20\t10\t88\n7\t4\t88\n12\t4\t86\n11\t13\t85\n18\t10\t84\n0\t14\t84\n14\t10\t82\n6\t4\t82\n0\t2\t82\n11\t10\t81\n10\t4\t80\n9\t2\t77\n12\t13\t75\n23\t4\t74\n9\t13\t72\n0\t8\t71\n4\t14\t69\n12\t10\t69\n23\t10\t67\n8\t2\t65\n3\t14\t64\n4\t8\t63\n5\t4\t63\n1\t14\t62\n0\t4\t59\n1\t8\t57\n10\t10\t57\n4\t4\t55\n8\t13\t53\n5\t13\t51\n0\t13\t50\n7\t10\t48\n9\t10\t47\n6\t10\t47\n3\t8\t46\n4\t10\t45\n8\t10\t45\n6\t13\t45\n3\t4\t44\n0\t10\t43\n5\t10\t41\n1\t4\t41\n2\t14\t38\n2\t4\t38\n4\t13\t38\n17\t7\t37\n16\t7\t36\n2\t8\t36\n20\t6\t33\n15\t7\t33\n17\t6\t32\n22\t7\t32\n16\t6\t30\n11\t7\t29\n10\t7\t29\n15\t6\t29\n13\t6\t28\n21\t6\t28\n14\t6\t28\n1\t13\t28\n22\t6\t28\n20\t7\t27\n12\t6\t27\n21\t7\t27\n18\t7\t27\n3\t13\t26\n23\t7\t26\n14\t7\t26\n19\t6\t26\n8\t7\t26\n10\t6\t24\n11\t6\t24\n19\t7\t23\n9\t6\t23\n1\t2\t23\n13\t7\t23\n17\t15\t22\n17\t3\t22\n12\t7\t20\n9\t7\t20\n18\t15\t19\n3\t2\t18\n1\t10\t18\n13\t15\t17\n21\t3\t17\n22\t17\t17\n14\t15\t16\n21\t17\t16\n23\t17\t16\n8\t6\t16\n7\t6\t16\n2\t13\t16\n15\t15\t15\n15\t3\t15\n19\t15\t15\n16\t15\t14\n0\t17\t14\n18\t6\t14\n20\t3\t14\n19\t3\t14\n10\t3\t13\n14\t3\t13\n13\t3\t13\n23\t6\t13\n1\t7\t13\n6\t6\t13\n1\t3\t13\n3\t10\t13\n7\t7\t13\n9\t3\t13\n12\t15\t12\n0\t15\t12\n0\t7\t12\n22\t3\t12\n22\t15\t11\n10\t15\t11\n20\t17\t11\n4\t7\t11\n21\t15\t11\n16\t3\t10\n0\t6\t10\n5\t7\t10\n23\t15\t9\n11\t3\t9\n23\t3\t9\n2\t10\t9\n5\t6\t8\n2\t2\t8\n6\t7\t8\n8\t3\t8\n7\t15\t7\n8\t15\t7\n6\t15\t7\n4\t3\t7\n18\t17\t7\n11\t15\t7\n1\t15\t7\n9\t15\t7\n3\t7\t7\n15\t1\t6\n2\t15\t6\n2\t3\t6\n7\t3\t6\n12\t1\t6\n20\t15\t5\n3\t6\t5\n16\t1\t5\n10\t1\t5\n0\t3\t5\n18\t3\t5\n1\t6\t5\n17\t1\t4\n2\t7\t4\n19\t17\t4\n17\t17\t4\n3\t3\t4\n12\t3\t4\n22\t1\t4\n6\t3\t4\n1\t17\t3\n14\t1\t3\n16\t17\t3\n4\t15\t3\n3\t1\t2\n20\t1\t2\n7\t1\t2\n19\t1\t2\n21\t1\t2\n5\t15\t2\n5\t1\t2\n23\t1\t2\n13\t17\t2\n2\t1\t2\n11\t1\t2\n4\t6\t2\n13\t1\t2\n2\t6\t2\n6\t1\t1\n18\t1\t1\n9\t1\t1\n12\t17\t1\n15\t17\t1\n9\t17\t1\n10\t17\t1\n4\t1\t1\n14\t17\t1\n"}]}},{"text":"%md\n#### Overall Taxi trips throughout the day\nWe can see that taxis are much more in demand in all areas, in evenings and nights than during mornings and afternoons\n","user":"anonymous","dateUpdated":"2018-04-06T13:13:52-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523044772438_1349805268","id":"20180406-125932_1802228965","dateCreated":"2018-04-06T12:59:32-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7468","dateFinished":"2018-04-06T13:13:52-0700","dateStarted":"2018-04-06T13:13:52-0700","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Overall Taxi trips throughout the day</h4>\n<p>We can see that taxis are much more in demand in all areas, in evenings and nights than during mornings and afternoons</p>\n</div>"}]}},{"text":"%sql\nSELECT hour(taxiTable.date) as hour_of_the_day,count(prediction) as Number_of_taxi_trips FROM taxiTable group By hour(taxiTable.date)\n","user":"anonymous","dateUpdated":"2018-04-06T13:14:02-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"stackedAreaChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql","editOnDblClick":false},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1523044495073_776146302","id":"20180406-125455_562838070","dateCreated":"2018-04-06T12:54:55-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:7013","dateFinished":"2018-04-06T13:10:57-0700","dateStarted":"2018-04-06T13:10:46-0700","results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"hour_of_the_day\tNumber_of_taxi_trips\n12\t6313\n22\t9155\n1\t2936\n13\t7225\n6\t5027\n16\t10924\n3\t2139\n20\t10544\n5\t3307\n19\t10713\n15\t9670\n9\t6092\n17\t11598\n4\t2337\n8\t6923\n23\t6580\n7\t6727\n10\t6362\n21\t10233\n11\t6411\n14\t8012\n2\t2040\n0\t4338\n18\t10956\n"}]}}],"name":"Taxi - Predictive Modelling","id":"2DBVSV9NX","angularObjects":{"2DA9Q247V:shared_process":[],"2DA67YVY5:shared_process":[],"2DAVDG46H:shared_process":[],"2DBTYZD2T:shared_process":[],"2DA6M5W3Q:shared_process":[],"2DBMBUVX3:shared_process":[],"2DC4G61HB:shared_process":[],"2DCARZCFE:shared_process":[],"2DAHXT1NX:shared_process":[],"2DASCRX51:shared_process":[],"2DAJR35SE:shared_process":[],"2DBSRZF5T:shared_process":[],"2DAWW5QQ5:shared_process":[],"2DAFX7HWY:shared_process":[],"2DD54TUGM:shared_process":[],"2DC29NANC:shared_process":[],"2DASXS6FS:shared_process":[],"2DBZXA8D5:shared_process":[],"2DB9M1MKR:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}